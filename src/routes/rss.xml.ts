import { getFiles } from "src/lib/fetch_files";

export interface PostData {
    title: string;
    slug: string;
    published: string;
    baseUrl: string;
}
export const splitFile = (fileName: string) => {
    // 2023-01-05_pre.pdf
    // split into year, type (pre | post), file extension
    try {
        const date = fileName.split("_")[0];
        const type = fileName.split("_")[1]?.split(".")?.[0];
        return { date, type };
    } catch (error) {
        return { date: "", type: "" };
    }
}
export const get = async () => {
    const fileBaseUrl = "https://stock_list.deta.dev/file"
    const filesNames = await getFiles();

    // format
    const fmttedNames = filesNames.map((name) => {
        const {date, type} = splitFile(name);
        // get month day from date YYYY-MM-DD
        // read date
        const fileDate = new Date(date);
        const month = fileDate.toLocaleString('default', { month: 'long' });
        const day = fileDate.toLocaleString('default', { day: 'numeric' });
        return {
            title: `${month}/${day} - ${type}`,
            slug: name,
            published: date,
            baseUrl: fileBaseUrl
        };
    })
    const body = render(fmttedNames);
    const headers = {
      'Cache-Control': `max-age=0, s-max-age=${600}`,
      'Content-Type': 'application/xml',
    };
    return {
      body,
      headers,
    };
  };
  
  const render = (posts: PostData[]) => `<?xml version="1.0" encoding="UTF-8" ?>
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
  <atom:link href="https:/dli-invest.github.io/stonk_file_list/rss" rel="self" type="application/rss+xml" />
  <title>Dli-invest stonk report list</title>
  <link>https:/dli-invest.github.io/stonk_file_list</link>
  <description>Stonk file list generated by FriendlyUser</description>
  ${posts
    .map(
      (post) => `<item>
  <guid>${post.baseUrl}/${post.slug}</guid>
  <title>${post.title}</title>
  <link>${post.baseUrl}/${post.slug}</link>
  <pubDate>${new Date(post.published).toUTCString()}</pubDate>
  </item>`
    )
    .join('')}
  </channel>
  </rss>
  `;